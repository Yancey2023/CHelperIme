import com.android.build.gradle.internal.api.ApkVariantOutputImpl
import java.io.FileInputStream
import java.util.Properties

plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    compileSdk 35
    defaultConfig {
        applicationId "com.yuyan.pinyin"
        minSdk 24
        targetSdk 35
        versionCode Integer.valueOf(versionCodeDate())
        versionName versionNameDate()

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        ndk {
            //noinspection ChromeOsAbiSupport
            abiFilters 'arm64-v8a'
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }

        lintOptions {
            abortOnError false
        }
    }

    //多渠道打包
    flavorDimensions = ["default"]
    productFlavors {
        publishNonDefault true //唯一的不同
        online {
            dimension "default"
            applicationIdSuffix  ".online"
        }
        offline {
            dimension "default"
            applicationIdSuffix  ".offline"
        }
    }

    buildTypes {
        release {
            // 混淆
            minifyEnabled true
            shrinkResources true
            applicationIdSuffix  ".release"
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard.cfg'
        }

        debug {
            applicationIdSuffix ".debug"
        }

    }

    compileOptions {
        sourceCompatibility 17
        targetCompatibility 17
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    namespace 'yancey.chelper.ime'

    android.applicationVariants.configureEach { variant ->
        variant.outputs.configureEach {
            outputFileName = "CHelperIme_${versionCodeDate()}_${variant.getProductFlavors()[0].name}_${variant.buildType.name}.apk"   // offline      online
        }
    }
}

File keystorePropertiesFile = rootProject.file("keystore.properties")
if (keystorePropertiesFile.exists()) {
    Properties keystoreProperties = new Properties()
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    android.signingConfigs {
        sign {
            keyAlias = keystoreProperties["keyAlias"] as String
            keyPassword = keystoreProperties["keyPassword"] as String
            storeFile = file(keystoreProperties["storeFile"] as String)
            storePassword = keystoreProperties["storePassword"] as String

            enableV1Signing = true
            enableV2Signing = true
            enableV3Signing = true
            enableV4Signing = true
        }
    }
    android.buildTypes {
        release {
            signingConfig = android.signingConfigs.sign
        }
        debug {
            signingConfig = android.signingConfigs.sign
        }
    }
}

static def versionCodeDate() {
    return new Date().format("yyyyMMddHH", TimeZone.getTimeZone("GMT+8"))
}

static def versionNameDate() {
    return new Date().format("yyyyMMdd.HH", TimeZone.getTimeZone("GMT+8"))
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':yuyansdk')
}
